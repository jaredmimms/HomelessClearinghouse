{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/babel-loader/lib/index.js!/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/eslint-loader/index.js??ref--13-0!/Applications/XAMPP/xamppfiles/htdocs/e28/p3/src/common/store.js","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/src/common/store.js","mtime":1620686899321},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCB7IGNyZWF0ZVN0b3JlLCBjcmVhdGVMb2dnZXIgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgYXhpb3MgfSBmcm9tICJAL2NvbW1vbi9hcHAuanMiOyAvLyBPbmx5IGxvYWQgdGhlIGNyZWF0ZUxvZ2dlciBwbHVnaW4gd2hlbiBpbiBkZXZlbG9wbWVudCBtb2RlCgp2YXIgZGVidWcgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nOwp2YXIgcGx1Z2lucyA9IGRlYnVnICYmIDEgPT0gMiA/IFtjcmVhdGVMb2dnZXIoe30pXSA6IFtdOwpleHBvcnQgdmFyIHN0b3JlID0gY3JlYXRlU3RvcmUoewogIHBsdWdpbnM6IHBsdWdpbnMsCiAgc3RhdGU6IGZ1bmN0aW9uIHN0YXRlKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdHM6IFtdLAogICAgICB1c2VyOiBudWxsCiAgICB9OwogIH0sCiAgLy8gTWV0aG9kcyB1c2VkIHRvIGFsdGVyIHRoZSBzdGF0ZSBvZiBvdXIgc3RvcmUKICBtdXRhdGlvbnM6IHsKICAgIHNldFBvc3RzOiBmdW5jdGlvbiBzZXRQb3N0cyhzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5wb3N0cyA9IHBheWxvYWQ7CiAgICB9LAogICAgc2V0VXNlcjogZnVuY3Rpb24gc2V0VXNlcihzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS51c2VyID0gcGF5bG9hZDsKICAgIH0KICB9LAogIC8vIE1ldGhvZHMgdGhhdCBjYW4gY29udGFpbiBhc3luYy4gY29kZQogIC8vIENhbiBub3QgZGlyZWN0bHkgYWx0ZXIgdGhlIHN0YXRlIC0gaGFzIHRvIGNoYW5nZSBzdGF0ZQogIC8vIGJ5IGNvbW1pdHRpbmcgbXV0YXRpb25zCiAgYWN0aW9uczogewogICAgZmV0Y2hQb3N0czogZnVuY3Rpb24gZmV0Y2hQb3N0cyhjb250ZXh0KSB7CiAgICAgIGF4aW9zLmdldCgicG9zdCIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29udGV4dC5jb21taXQoJ3NldFBvc3RzJywgcmVzcG9uc2UuZGF0YS5wb3N0KTsKICAgICAgfSk7CiAgICB9LAogICAgYXV0aFVzZXI6IGZ1bmN0aW9uIGF1dGhVc2VyKGNvbnRleHQpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgYXhpb3MucG9zdCgnYXV0aCcpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5hdXRoZW50aWNhdGVkKSB7CiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdzZXRVc2VyJywgcmVzcG9uc2UuZGF0YS51c2VyKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdzZXRVc2VyJywgZmFsc2UpOwogICAgICAgICAgfQoKICAgICAgICAgIHJlc29sdmUoKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXRQb3N0QnlJZDogZnVuY3Rpb24gZ2V0UG9zdEJ5SWQoc3RhdGUpIHsKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpZCkgewogICAgICAgIHJldHVybiBzdGF0ZS5wb3N0cy5maWx0ZXIoZnVuY3Rpb24gKHBvc3QpIHsKICAgICAgICAgIHJldHVybiBwb3N0LmlkID09IGlkOwogICAgICAgIH0sIGlkKVswXTsKICAgICAgfTsKICAgIH0KICB9Cn0pOw=="},{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/e28/p3/src/common/store.js"],"names":["createStore","createLogger","axios","debug","process","env","NODE_ENV","plugins","store","state","posts","user","mutations","setPosts","payload","setUser","actions","fetchPosts","context","get","then","response","commit","data","post","authUser","Promise","resolve","authenticated","getters","getPostById","id","filter"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,YAAtB,QAA0C,MAA1C;AACA,SAASC,KAAT,QAAsB,iBAAtB,C,CAEA;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAvC;AACA,IAAMC,OAAO,GAAGJ,KAAK,IAAI,KAAK,CAAd,GAAkB,CAACF,YAAY,CAAC,EAAD,CAAb,CAAlB,GAAuC,EAAvD;AAEA,OAAO,IAAMO,KAAK,GAAGR,WAAW,CAAC;AAC7BO,EAAAA,OAAO,EAAPA,OAD6B;AAE7BE,EAAAA,KAF6B,mBAErB;AACJ,WAAO;AACHC,MAAAA,KAAK,EAAE,EADJ;AAEHC,MAAAA,IAAI,EAAE;AAFH,KAAP;AAIH,GAP4B;AAQ7B;AACAC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QADO,oBACEJ,KADF,EACSK,OADT,EACkB;AACrBL,MAAAA,KAAK,CAACC,KAAN,GAAcI,OAAd;AACH,KAHM;AAIPC,IAAAA,OAJO,mBAICN,KAJD,EAIQK,OAJR,EAIiB;AACpBL,MAAAA,KAAK,CAACE,IAAN,GAAaG,OAAb;AACH;AANM,GATkB;AAiB7B;AACA;AACA;AACAE,EAAAA,OAAO,EAAE;AACLC,IAAAA,UADK,sBACMC,OADN,EACe;AAChBhB,MAAAA,KAAK,CAACiB,GAAN,CAAU,MAAV,EAAkBC,IAAlB,CAAuB,UAACC,QAAD,EAAc;AACjCH,QAAAA,OAAO,CAACI,MAAR,CAAe,UAAf,EAA2BD,QAAQ,CAACE,IAAT,CAAcC,IAAzC;AACH,OAFD;AAGH,KALI;AAMLC,IAAAA,QANK,oBAMIP,OANJ,EAMa;AACd,aAAO,IAAIQ,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC5BzB,QAAAA,KAAK,CAACsB,IAAN,CAAW,MAAX,EAAmBJ,IAAnB,CAAwB,UAACC,QAAD,EAAc;AAClC,cAAIA,QAAQ,CAACE,IAAT,CAAcK,aAAlB,EAAiC;AAC7BV,YAAAA,OAAO,CAACI,MAAR,CAAe,SAAf,EAA0BD,QAAQ,CAACE,IAAT,CAAcZ,IAAxC;AACH,WAFD,MAEO;AACHO,YAAAA,OAAO,CAACI,MAAR,CAAe,SAAf,EAA0B,KAA1B;AACH;;AAEDK,UAAAA,OAAO;AACV,SARD;AASH,OAVM,CAAP;AAWH;AAlBI,GApBoB;AAwC7BE,EAAAA,OAAO,EAAE;AACLC,IAAAA,WADK,uBACOrB,KADP,EACc;AACf,aAAO,UAAUsB,EAAV,EAAc;AACjB,eAAOtB,KAAK,CAACC,KAAN,CAAYsB,MAAZ,CAAmB,UAACR,IAAD,EAAU;AAChC,iBAAOA,IAAI,CAACO,EAAL,IAAWA,EAAlB;AACH,SAFM,EAEJA,EAFI,EAEA,CAFA,CAAP;AAGH,OAJD;AAKH;AAPI;AAxCoB,CAAD,CAAzB","sourcesContent":["import { createStore, createLogger } from 'vuex'\nimport { axios } from \"@/common/app.js\";\n\n// Only load the createLogger plugin when in development mode\nconst debug = process.env.NODE_ENV !== 'production';\nconst plugins = debug && 1 == 2 ? [createLogger({})] : [];\n\nexport const store = createStore({\n    plugins,\n    state() {\n        return {\n            posts: [],\n            user: null,\n        }\n    },\n    // Methods used to alter the state of our store\n    mutations: {\n        setPosts(state, payload) {\n            state.posts = payload;\n        },\n        setUser(state, payload) {\n            state.user = payload;\n        }\n    },\n    // Methods that can contain async. code\n    // Can not directly alter the state - has to change state\n    // by committing mutations\n    actions: {\n        fetchPosts(context) {\n            axios.get(\"post\").then((response) => {\n                context.commit('setPosts', response.data.post);\n            });\n        },\n        authUser(context) {\n            return new Promise((resolve) => {\n                axios.post('auth').then((response) => {\n                    if (response.data.authenticated) {\n                        context.commit('setUser', response.data.user);\n                    } else {\n                        context.commit('setUser', false);\n                    }\n\n                    resolve();\n                });\n            });\n        },\n    },\n    getters: {\n        getPostById(state) {\n            return function (id) {\n                return state.posts.filter((post) => {\n                    return post.id == id;\n                }, id)[0];\n            }\n        }\n    }\n})"]}]}