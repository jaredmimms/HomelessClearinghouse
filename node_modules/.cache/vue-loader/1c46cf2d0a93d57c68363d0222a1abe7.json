{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Applications/XAMPP/xamppfiles/htdocs/e28/p3/src/components/pages/PostPage.vue?vue&type=style&index=0&id=4367c171&scoped=true&lang=css","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/src/components/pages/PostPage.vue","mtime":1620750813287},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lcnJvciB7CiAgY29sb3I6IHJlZDsKfQoKLnN1Y2Nlc3MgewogIGNvbG9yOiBncmVlbjsKfQoKI2lucHV0cyB7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQoKaW5wdXQsCmxhYmVsLAp0ZXh0YXJlYSwKYnV0dG9uIHsKICBkaXNwbGF5OiBibG9jazsKICBmbG9hdDogbGVmdDsKICBjbGVhcjogYm90aDsKfQoKI3Byb2R1Y3QtcGFnZSB7CiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tc2lsdmVyKTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgcGFkZGluZzogMTVweDsKICBtYXJnaW4tbGVmdDogYXV0bzsKICBtYXJnaW4tcmlnaHQ6IGF1dG87CiAgd2lkdGg6IDMwJTsKICBtaW4td2lkdGg6IDMwMHB4Owp9CgoudGl0bGUgewogIGhlaWdodDogNTBweDsKICBmb250LXNpemU6IDJyZW07CiAgbWFyZ2luOiA1cHggMCAxMHB4IDA7CiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOwp9CgouY29udGVudCB7CiAgbWFyZ2luOiBhdXRvOwogIHRleHQtYWxpZ246IGxlZnQ7CiAgZm9udC1zdHlsZTogaXRhbGljOwogIGxpbmUtaGVpZ2h0OiAxLjU7Cn0K"},{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/e28/p3/src/components/pages/PostPage.vue"],"names":[],"mappings":"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","file":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/src/components/pages/PostPage.vue","sourceRoot":"","sourcesContent":["<template>\n  <div id=\"post-page\">\n    <div v-if=\"post\">\n      <h1>Post: {{ id }}</h1>\n      <div class=\"title\">{{ post.title }}</div>\n\n      <div class=\"content\">{{ post.content }}</div>\n      <div v-if=\"updated\">\n        <label for=\"title\">Title</label>\n        <input\n          type=\"text\"\n          v-model=\"post.title\"\n          id=\"title\"\n          v-on:blur=\"validate\"\n        />\n        <div v-if=\"errors && errors.title\" class=\"error\">\n          <li v-for=\"(item, index) in errors.title\" v-bind:key=\"index\">\n            {{ item }}\n          </li>\n        </div>\n\n        <label for=\"favorite\" class=\"form-checkbox-label\">\n          <input type=\"checkbox\" v-model=\"post.favorite\" id=\"favorite\" />\n          Favorite?\n        </label>\n\n        <label for=\"featured\" class=\"form-checkbox-label\">\n          <input type=\"checkbox\" v-model=\"post.featured\" id=\"featured\" />\n          Featured?\n        </label>\n\n        <label for=\"content\">Content</label>\n        <textarea\n          v-model=\"post.content\"\n          id=\"content\"\n          v-on:blur=\"validate\"\n        ></textarea>\n        <div v-if=\"errors && errors.content\" class=\"error\">\n          <li v-for=\"(item, index) in errors.content\" v-bind:key=\"index\">\n            {{ item }}\n          </li>\n        </div>\n\n        <label for=\"categories\">Categories (separated by comma)</label>\n        <input\n          type=\"text\"\n          v-model=\"post.categories\"\n          id=\"categories\"\n          v-on:blur=\"validate\"\n        />\n        <div v-if=\"errors && errors.categories\" class=\"error\">\n          <li v-for=\"(item, index) in errors.categories\" v-bind:key=\"index\">\n            {{ item }}\n          </li>\n        </div>\n      </div>\n\n      <button v-if=\"!updated\" v-on:click=\"updated = true\">Update</button>\n      <button v-if=\"updated\" v-on:click=\"update\">Update</button>\n      <button\n        v-if=\"updated\"\n        v-on:click=\"\n          updated = false;\n          success = false;\n          failure = false;\n        \"\n      >\n        Cancel\n      </button>\n      <div v-if=\"success\" class=\"success\">Post successfully updated</div>\n      <div v-if=\"failure && errors\" class=\"error\">Error updating post</div>\n    </div>\n    <div v-else>\n      <h2>Post {{ id }} not found</h2>\n    </div>\n\n    <div v-if=\"previousPost\">\n      <router-link v-bind:to=\"'/post/' + previousPost.id\">\n        <button>Previous</button>\n      </router-link>\n    </div>\n\n    <div v-if=\"nextPost\">\n      <router-link v-bind:to=\"'/post/' + nextPost.id\">\n        <button>Next</button>\n      </router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { axios } from \"@/common/app.js\";\nimport Validator from \"validatorjs\";\nimport { router } from \"@/common/router.js\";\n\nexport default {\n  props: {\n    id: {\n      type: String,\n    },\n    posts: {\n      type: Array,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      updated: false,\n      failure: false,\n      success: false,\n      errors: [],\n    };\n  },\n  methods: {\n    update() {\n      if (this.validate()) {\n        var definedPost = this.post;\n        if (definedPost.favorite) {\n          definedPost.favorite = 1;\n        } else {\n          definedPost.favorite = 0;\n        }\n        if (definedPost.featured) {\n          definedPost.featured = 1;\n        } else {\n          definedPost.featured = 0;\n        }\n        axios.put(\"/post/\" + this.post.id, definedPost).then((response) => {\n          if (response.data && response.data.errors) {\n            this.failure = true;\n            this.success = false;\n            // continue from here with errors\n            this.errors = response.data.errors;\n          } else {\n            this.errors = null;\n            this.success = true;\n            this.failure = false;\n            this.$emit(\"update-posts\");\n          }\n        });\n      }\n    },\n    validate() {\n      let validator = new Validator(this.post, {\n        title: \"required|between:3,100\",\n        categories: \"required|between:3,100\",\n        content: \"required|min:100\",\n      });\n\n      if (validator.fails()) {\n        this.errors = validator.errors.all();\n      } else {\n        this.errors = null;\n      }\n\n      return validator.passes();\n    },\n    delete() {\n      axios.delete(\"/post/\" + this.post.id).then((response) => {\n        if (response.data && response.data.errors) {\n          this.failure = true;\n          this.success = false;\n          // continue from here with errors\n          this.errors = response.data.errors;\n        } else {\n          this.errors = null;\n          this.success = true;\n          this.failure = false;\n          this.$emit(\"update-posts\");\n          router.push(\"posts\");\n        }\n      });\n    },\n  },\n  computed: {\n    nextPost() {\n      var posted;\n      if (this.posts && this.post) {\n        var id = this.post.id;\n        this.posts.forEach(function (post, index, posts) {\n          if (id == post.id) {\n            if (posts[index + 1]) {\n              posted = posts[index + 1];\n            } else if (posts.length > 1) {\n              posted = posts[0];\n            }\n          }\n        });\n      }\n      return posted;\n    },\n    previousPost() {\n      var posted;\n      if (this.posts && this.post) {\n        var id = this.post.id;\n        this.posts.forEach(function (post, index, posts) {\n          if (id == post.id) {\n            if (posts[index - 1]) {\n              posted = posts[index - 1];\n            } else if (posts.length > 1) {\n              posted = posts[posts.length - 1];\n            }\n          }\n        });\n      }\n      return posted;\n    },\n    post() {\n      if (this.posts) {\n        var post;\n        var id = this.id;\n        this.posts.forEach(function (producted) {\n          if (producted.id == id) {\n            post = producted;\n          }\n        });\n        if (post) {\n          if (Number(post.favorite) == 1) {\n            post.favorite = true;\n          } else {\n            post.favorite = false;\n          }\n          if (Number(post.featured) == 1) {\n            post.featured = true;\n          } else {\n            post.featured = false;\n          }\n        }\n        return post;\n      } else {\n        return null;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.error {\n  color: red;\n}\n\n.success {\n  color: green;\n}\n\n#inputs {\n  text-align: left;\n}\n\ninput,\nlabel,\ntextarea,\nbutton {\n  display: block;\n  float: left;\n  clear: both;\n}\n\n#product-page {\n  border: 1px solid var(--silver);\n  text-align: center;\n  padding: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 30%;\n  min-width: 300px;\n}\n\n.title {\n  height: 50px;\n  font-size: 2rem;\n  margin: 5px 0 10px 0;\n  vertical-align: baseline;\n}\n\n.content {\n  margin: auto;\n  text-align: left;\n  font-style: italic;\n  line-height: 1.5;\n}\n</style>"]}]}